<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bsUtilisateur.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAACAqJSVfWk9Nh1ZLSYtYTk2LW1JQi19WVItjWViLZF1bi2hhYYtqY2OLbGRkizcz
        bos1NXOLODhzizw6botsZGSLbGRki2hhYYtmXV2LY1lZi19WVotdUlCLWU5Ni1ZLSYpLQT+ADQ0NSwAA
        ABQAAAAAAAAAAAAAAAAAAAAWinp3rb2kofy2nJf/u6Ke/8Kqp//JsrD/z7q4/9bCwf/dysn/49LR/+nZ
        2f/s3d3/bmjx/1lZ//9eXv//fXfw/+3e3f/q29v/5dTT/97My//YxcP/0b26/8u0sv/ErKn/vaSg/7ac
        mP+mjIjzXk5MggAAAAkAAAAAAAAAAFtOSCrDrKn/sZaR/7OYk/+5oJz/wKik/8ewrf/NuLX/1L++/9rH
        xf/gzs3/5dXV/+rb2/99de7/TEz//0xM//+Ceu3/6tvb/+bW1f/h0M//28nH/9XBwP/Purf/yLKv/8Kq
        p/+7op7/tZqW/66Sjf+fhX/eAAAACwAAAAAAAAAAAAAAEb2mo/OzmJP/sZWR/7edmf++paL/xK2q/8u0
        sv/RvLr/18TC/93Myv/i0tH/59fX/5WN6f9fX///YmL//6ad6f/p29r/5NXU/97My//YxMP/0r27/8y2
        tP/Gr6z/v6ek/7mfm/+yl5P/rJCL/5d+ebsAAAAFAAAAAAAAAAAAAAAJtp+c1LWblv+uk47/tZqW/7ui
        nv/Cqqf/ybOw/8+7uP/VwsD/28nH/9/Pzf/j09L/qqDi/2pq//9sbP//urDj/+bZ2P/l19b/4tTT/9vL
        yf/Rvbr/ybKv/8OrqP+9pKD/tpyY/7CVkP+qjoj/jnVwkQAAAAEAAAAAAAAAAAAAAASsl5S0t52Z/6yQ
        i/+zmZT/u6Ke/8Gqp//Isq//zrm3/9PAvv/YxsT/3MzK/+DQzv+7r9z/dHT//3Nz///Lv9z/5NbV/+LU
        0//g0tH/3tDO/9zNy//Rv73/waml/7qgnP+0mZT/rZGM/6eLhf+AamRlAAAAAAAAAAAAAAAAAAAAAaSP
        i5C7op7/rJKM/7Salf+6op7/waqm/8exrv/MuLb/0b+8/9bEwv/aycf/3c3L/8q91f97e///eXn//9vO
        1P/h09L/4NLR/9/Rz//dz83/283L/9rLyf/UxMH/vKSg/7GVkP+rj4n/pIiC/2JQTDkAAAAAAAAAAAAA
        AAAAAAAAloOAa7+npP+tlI7/tJuW/7qinv/Aqqb/xrGt/8u3tP/Qvbv/1MLA/9fHxf/aysn/18jN/4CA
        //+FhPz/39HQ/9/R0P/e0c//3tDO/9zPzf/bzcv/2szK/9jKyP/Wx8T/u6Sg/6ySjP+ghX33DAAAFAAA
        AAAAAAAAAAAAAAAAAACHd3M+waqm/66XkP+0nZf/uqOf/8Cqpv/FsK3/yrez/868uf/Swb7/1cXD/9jI
        xv/ay8n/jIv8/5SS9v/d0M7/3tDO/93Qzv/d0M7/3M/N/9vOzP/azcv/2czJ/9rNy//azsz/s52X/5Z7
        dNIAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAW2n5vNuaOf/7Wemf+6pKD/wKqm/8Wwrf/JtrP/zbu4/9HA
        vf/UxMH/18fF/9nKyP+bmff/oZ3x/9zOzf/dz83/3dDO/93Qzv/cz83/287M/9vOzP/bzsz/4NbU/+DW
        1P/FtbD/iG9pcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJqIhDi+p6PzuKOd/7umof/ArKf/xbGt/8m2
        s//Nu7j/0L+8/9PDwP/VxsT/2MnH/5iV8f+jnuv/287M/9zPzf/c0M7/3NDO/9zQzv/c0M7/3NHP/+LZ
        1//k29r/18zJ/6OMhMY4HBwJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKePhyC2n5yGuaOe1L6p
        pP/Esa3/ybez/8y7uP/Qv7z/08PA/9bHxf/Vy9f/jo36/5ST9v/i2Nn/3M/N/9zQzv/e0tD/4dfV/+Pb
        2f/g1tT/zb67/LmmocKcgXpqXEVFCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABo46EGbGZllW4o6CUw6+r3su5tv/azsv/+PX1//7+/v/Rz/P/3tz1///////28vH/6ODe/9vP
        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
        AP/+AAD//wAB//8AAf//gAP//8AH///gD/8=
</value>
  </data>
</root>